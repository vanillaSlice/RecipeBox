{"version":3,"sources":["components/IconButton/index.jsx","components/Header/index.jsx","components/RecipeCard/index.jsx","components/RecipeList/index.jsx","components/Modal/index.jsx","components/Label/index.jsx","components/Input/index.jsx","components/TextArea/index.jsx","components/Button/index.jsx","components/RecipeForm/index.jsx","components/RecipeDisplay/index.jsx","components/Footer/index.jsx","components/App/index.jsx","serviceWorker.js","index.js"],"names":["IconButton","props","buttonStyle","onClick","icon","description","react_default","a","createElement","type","className","concat","lib_default","name","size","tag","defaultProps","Header","onAdd","href","src_components_IconButton","RecipeCard","image","style","backgroundImage","RecipeList","recipes","map","recipe","index","src_components_RecipeCard","key","reduce","_rows","recipeCard","push","Math","floor","row","renderRowsOfRecipeCards","Modal","onClose","title","children","e","stopPropagation","Label","text","Input","id","value","onChange","required","autoComplete","TextArea","Button","RecipeForm","_this","Object","classCallCheck","this","_this$props","possibleConstructorReturn","getPrototypeOf","call","ingredients","method","state","saved","onSubmit","bind","assertThisInitialized","onClear","preventDefault","_this$state","onSave","setState","_this$setState","_e$target","target","defineProperty","_this$state2","src_components_Label","src_components_Input","src_components_TextArea","src_components_Button","Component","RecipeDisplay","onEdit","onDelete","src","alt","Footer","version","App","JSON","parse","localStorage","getItem","data","selectedRecipe","displayModal","mode","handleAddRecipeClick","handleRecipeCardClick","handleEditClick","handleDeleteClick","handleCloseModalClick","renderModal","saveRecipe","updateRecipe","_this2","prevState","toConsumableArray","filter","setItem","stringify","_this3","findIndex","src_components_Modal","src_components_RecipeDisplay","assign","src_components_RecipeForm","src_components_Header","src_components_RecipeList","src_components_Footer","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","AppElement","rootElement","document","getElementById","render","URL","process","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.bf6b3662.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport FontAwesome from 'react-fontawesome';\n\nimport './index.css';\n\nconst IconButton = (props) => {\n  const {\n    buttonStyle,\n    onClick,\n    icon,\n    description,\n  } = props;\n\n  return (\n    <button\n      type=\"button\"\n      className={`icon-btn icon-btn--${buttonStyle}`}\n      onClick={onClick}\n    >\n      <FontAwesome name={icon} size=\"2x\" tag=\"i\" />\n      <span className=\"sr-only\">{description}</span>\n    </button>\n  );\n};\n\nIconButton.propTypes = {\n  buttonStyle: PropTypes.oneOf(['dark', 'light']),\n  onClick: PropTypes.func,\n  icon: PropTypes.string,\n  description: PropTypes.string,\n};\n\nIconButton.defaultProps = {\n  buttonStyle: 'dark',\n  onClick: null,\n  icon: '',\n  description: '',\n};\n\nexport default IconButton;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport IconButton from '../IconButton';\n\nimport './index.css';\n\nconst Header = (props) => {\n  const { onAdd } = props;\n\n  return (\n    <header className=\"header\">\n      <div className=\"header__content\">\n        <h1 className=\"header__heading\"><a href=\".\">Recipe Box</a></h1>\n        <IconButton\n          buttonStyle=\"light\"\n          onClick={onAdd}\n          icon=\"plus\"\n          description=\"Add new recipe\"\n        />\n      </div>\n    </header>\n  );\n};\n\nHeader.propTypes = {\n  onAdd: PropTypes.func.isRequired,\n};\n\nexport default Header;\n","/* eslint-disable\n    jsx-a11y/click-events-have-key-events,\n    jsx-a11y/no-static-element-interactions\n*/\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './index.css';\n\nconst RecipeCard = (props) => {\n  const {\n    onClick,\n    image,\n    name,\n  } = props;\n\n  return (\n    <div className=\"recipe-card\" onClick={onClick}>\n      <div className=\"recipe-card__content\">\n        <div\n          className=\"recipe-card__img\"\n          style={{ backgroundImage: `url('${image}')` }}\n        />\n        <h2 className=\"recipe-card__title\">{name}</h2>\n      </div>\n    </div>\n  );\n};\n\nRecipeCard.propTypes = {\n  onClick: PropTypes.func,\n  image: PropTypes.string,\n  name: PropTypes.string,\n};\n\nRecipeCard.defaultProps = {\n  onClick: null,\n  image: '',\n  name: '',\n};\n\nexport default RecipeCard;\n","import React from 'react';\n\nimport RecipeCard from '../RecipeCard';\n\nimport './index.css';\n\nconst renderRowsOfRecipeCards = (props) => {\n  // map recipes to recipe cards\n  const recipeCards = props.recipes.map((recipe, index) => (\n    <RecipeCard\n      key={`recipe-${index + 1}`}\n      name={recipe.name}\n      image={recipe.image}\n      onClick={() => props.onClick(recipe)}\n    />\n  ));\n\n  // organise into rows of 3\n  const rows = recipeCards.reduce((_rows, recipeCard, index) => {\n    if (index % 3 === 0) {\n      _rows.push([recipeCard]);\n    } else {\n      _rows[Math.floor(index / 3)].push(recipeCard);\n    }\n    return _rows;\n  }, []);\n\n  // wrap inside row divs\n  const rowDivs = rows.map((row, index) => (\n    <div className=\"recipe-list__row\" key={`row-${index + 1}`}>\n      {row}\n    </div>\n  ));\n\n  return rowDivs;\n};\n\nconst RecipeList = props => (\n  <div className=\"recipe-list\">\n    {renderRowsOfRecipeCards(props)}\n  </div>\n);\n\nexport default RecipeList;\n","/* eslint-disable\n    jsx-a11y/click-events-have-key-events,\n    jsx-a11y/no-static-element-interactions\n*/\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport IconButton from '../IconButton';\n\nimport './index.css';\n\nconst Modal = (props) => {\n  const {\n    onClose,\n    title,\n    children,\n  } = props;\n\n  return (\n    <div className=\"modal\" onClick={onClose}>\n      <div className=\"modal__container\">\n        <div className=\"modal__content\" onClick={e => e.stopPropagation()}>\n          <div className=\"modal__header\">\n            <h2 className=\"modal__title\">{title}</h2>\n            <IconButton\n              onClick={onClose}\n              icon=\"close\"\n              description=\"Close modal\"\n            />\n          </div>\n          <div className=\"modal__body\">\n            {children}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nModal.propTypes = {\n  onClose: PropTypes.func,\n  title: PropTypes.string,\n  children: PropTypes.node.isRequired,\n};\n\nModal.defaultProps = {\n  onClose: null,\n  title: '',\n};\n\nexport default Modal;\n","/* eslint-disable\n    jsx-a11y/label-has-for,\n    jsx-a11y/label-has-associated-control\n*/\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './index.css';\n\nconst Label = (props) => {\n  const { text, children } = props;\n  return (\n    <label className=\"label\">\n      {text}\n      {children}\n    </label>\n  );\n};\n\nLabel.propTypes = {\n  text: PropTypes.string,\n  children: PropTypes.node.isRequired,\n};\n\nLabel.defaultProps = {\n  text: '',\n};\n\nexport default Label;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './index.css';\n\nconst Input = (props) => {\n  const {\n    type,\n    id,\n    value,\n    onChange,\n    required,\n  } = props;\n\n  return (\n    <input\n      className=\"input\"\n      type={type}\n      id={id}\n      value={value}\n      onChange={onChange}\n      required={required}\n      autoComplete=\"false\"\n    />\n  );\n};\n\nInput.propTypes = {\n  type: PropTypes.oneOf(['text', 'url']),\n  id: PropTypes.string.isRequired,\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n  required: PropTypes.bool,\n};\n\nInput.defaultProps = {\n  type: 'text',\n  value: null,\n  onChange: null,\n  required: false,\n};\n\nexport default Input;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './index.css';\n\nconst TextArea = (props) => {\n  const {\n    id,\n    value,\n    onChange,\n    required,\n  } = props;\n\n  return (\n    <textarea\n      className=\"textarea\"\n      id={id}\n      value={value}\n      onChange={onChange}\n      required={required}\n      autoComplete=\"false\"\n    />\n  );\n};\n\nTextArea.propTypes = {\n  id: PropTypes.string.isRequired,\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n  required: PropTypes.bool,\n};\n\nTextArea.defaultProps = {\n  value: null,\n  onChange: null,\n  required: false,\n};\n\nexport default TextArea;\n","/* eslint-disable react/button-has-type */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './index.css';\n\nconst Button = (props) => {\n  const {\n    type,\n    buttonStyle,\n    onClick,\n    text,\n  } = props;\n\n  return (\n    <button\n      type={type}\n      className={`btn btn--${buttonStyle}`}\n      onClick={onClick}\n    >\n      {text}\n    </button>\n  );\n};\n\nButton.propTypes = {\n  type: PropTypes.oneOf(['button', 'submit']),\n  buttonStyle: PropTypes.oneOf(['default', 'danger']),\n  onClick: PropTypes.func,\n  text: PropTypes.string,\n};\n\nButton.defaultProps = {\n  type: 'button',\n  buttonStyle: 'default',\n  onClick: null,\n  text: '',\n};\n\nexport default Button;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Label from '../Label';\nimport Input from '../Input';\nimport TextArea from '../TextArea';\nimport Button from '../Button';\n\nimport './index.css';\n\nclass RecipeForm extends Component {\n  constructor(props) {\n    super(props);\n\n    const {\n      name,\n      ingredients,\n      method,\n      image,\n    } = this.props;\n\n    this.state = {\n      name,\n      ingredients,\n      method,\n      image,\n      saved: false,\n    };\n\n    this.onSubmit = this.onSubmit.bind(this);\n    this.onChange = this.onChange.bind(this);\n    this.onClear = this.onClear.bind(this);\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n\n    const {\n      name,\n      ingredients,\n      method,\n      image,\n    } = this.state;\n    const { onSave } = this.props;\n\n    // save this recipe\n    onSave({\n      name,\n      ingredients,\n      method,\n      image,\n    });\n\n    // reset form and note that we've saved recipe\n    this.setState({\n      name: '',\n      ingredients: '',\n      method: '',\n      image: '',\n      saved: true,\n    });\n  }\n\n  onChange(e) {\n    const { id, value } = e.target;\n    this.setState({\n      [id]: value,\n      saved: false,\n    });\n  }\n\n  onClear() {\n    this.setState({\n      name: '',\n      ingredients: '',\n      method: '',\n      image: '',\n      saved: false,\n    });\n  }\n\n  render() {\n    const {\n      name,\n      ingredients,\n      method,\n      image,\n      saved,\n    } = this.state;\n\n    return (\n      <form className=\"recipe-form\" onSubmit={this.onSubmit}>\n        <Label text=\"Recipe name *\">\n          <Input\n            id=\"name\"\n            value={name}\n            onChange={this.onChange}\n            required\n          />\n        </Label>\n        <Label text=\"Ingredients *\">\n          <TextArea\n            id=\"ingredients\"\n            value={ingredients}\n            onChange={this.onChange}\n            required\n          />\n        </Label>\n        <Label text=\"Method *\">\n          <TextArea\n            id=\"method\"\n            value={method}\n            onChange={this.onChange}\n            required\n          />\n        </Label>\n        <Label text=\"Image URL (optional)\">\n          <Input\n            type=\"url\"\n            id=\"image\"\n            value={image}\n            onChange={this.onChange}\n          />\n        </Label>\n        <Button id=\"save\" type=\"submit\" text=\"Save\" />\n        <Button id=\"clear\" text=\"Clear\" onClick={this.onClear} />\n        {saved && <span className=\"recipe-form__save-message\">Saved recipe!</span>}\n      </form>\n    );\n  }\n}\n\nRecipeForm.propTypes = {\n  name: PropTypes.string,\n  ingredients: PropTypes.string,\n  method: PropTypes.string,\n  image: PropTypes.string,\n  onSave: PropTypes.func,\n};\n\nRecipeForm.defaultProps = {\n  name: '',\n  ingredients: '',\n  method: '',\n  image: '',\n  onSave: null,\n};\n\nexport default RecipeForm;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Button from '../Button';\n\nimport './index.css';\n\nconst RecipeDisplay = (props) => {\n  const {\n    image,\n    name,\n    ingredients,\n    method,\n    onEdit,\n    onDelete,\n  } = props;\n\n  return (\n    <div className=\"recipe-display\">\n      <div className=\"recipe-display__row\">\n        <img\n          className=\"recipe-display__img\"\n          src={image}\n          alt={name}\n          title={name}\n        />\n        <div className=\"recipe-display__ingredients\">\n          <h3 className=\"recipe-display__title\">Ingredients</h3>\n          <p className=\"recipe-display__text\">{ingredients}</p>\n        </div>\n      </div>\n      <div className=\"recipe-display__method\">\n        <h3 className=\"recipe-display__title\">Method</h3>\n        <p className=\"recipe-display__text\">{method}</p>\n      </div>\n      <Button onClick={onEdit} text=\"Edit\" />\n      <Button buttonStyle=\"danger\" onClick={onDelete} text=\"Delete\" />\n    </div>\n  );\n};\n\nRecipeDisplay.propTypes = {\n  image: PropTypes.string,\n  name: PropTypes.string,\n  ingredients: PropTypes.string,\n  method: PropTypes.string,\n  onEdit: PropTypes.func,\n  onDelete: PropTypes.func,\n};\n\nRecipeDisplay.defaultProps = {\n  image: '',\n  name: '',\n  ingredients: '',\n  method: '',\n  onEdit: null,\n  onDelete: null,\n};\n\nexport default RecipeDisplay;\n","import React from 'react';\n\nimport { version } from '../../../package.json';\n\nimport './index.css';\n\nconst Footer = () => (\n  <footer className=\"footer\">\n    <div className=\"footer__content\">\n      <small>\n        v\n        <span className=\"footer__version\">{ version }</span>\n        &nbsp;|&nbsp;\n        <a href=\"https://github.com/vanillaSlice/RecipeBox\">GitHub</a>\n        &nbsp;| Made with 🎧 by&nbsp;\n        <a href=\"https://mikelowe.xyz\">Mike</a>\n      </small>\n    </div>\n  </footer>\n);\n\nexport default Footer;\n","import React, { Component } from 'react';\n\nimport Header from '../Header';\nimport RecipeList from '../RecipeList';\nimport Modal from '../Modal';\nimport RecipeForm from '../RecipeForm';\nimport RecipeDisplay from '../RecipeDisplay';\nimport Footer from '../Footer';\n\nimport data from '../../data/recipes.json';\n\nimport './index.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      recipes: JSON.parse(localStorage.getItem('recipes')) || data.recipes,\n      selectedRecipe: {},\n      displayModal: false,\n      mode: '',\n    };\n\n    this.handleAddRecipeClick = this.handleAddRecipeClick.bind(this);\n    this.handleRecipeCardClick = this.handleRecipeCardClick.bind(this);\n    this.handleEditClick = this.handleEditClick.bind(this);\n    this.handleDeleteClick = this.handleDeleteClick.bind(this);\n    this.handleCloseModalClick = this.handleCloseModalClick.bind(this);\n    this.renderModal = this.renderModal.bind(this);\n    this.saveRecipe = this.saveRecipe.bind(this);\n    this.updateRecipe = this.updateRecipe.bind(this);\n  }\n\n  handleAddRecipeClick() {\n    this.setState({\n      selectedRecipe: {},\n      displayModal: true,\n      mode: 'Add',\n    });\n  }\n\n  handleRecipeCardClick(recipe) {\n    this.setState({\n      selectedRecipe: recipe,\n      displayModal: true,\n      mode: 'Display',\n    });\n  }\n\n  handleEditClick() {\n    this.setState({\n      displayModal: true,\n      mode: 'Edit',\n    });\n  }\n\n  handleDeleteClick() {\n    this.setState((prevState) => {\n      const { selectedRecipe } = this.state;\n      const recipes = [...prevState.recipes].filter(recipe => recipe !== selectedRecipe);\n      localStorage.setItem('recipes', JSON.stringify(recipes));\n      return { recipes, displayModal: false };\n    });\n  }\n\n  handleCloseModalClick() {\n    this.setState({\n      selectedRecipe: {},\n      displayModal: false,\n      mode: '',\n    });\n  }\n\n  updateRecipe(recipe) {\n    this.setState((prevState) => {\n      const recipes = [...prevState.recipes];\n      const { selectedRecipe } = this.state;\n      const index = recipes.findIndex(e => e === selectedRecipe);\n      recipes[index] = recipe;\n      localStorage.setItem('recipes', JSON.stringify(recipes));\n      return { recipes, selectedRecipe: recipe, mode: 'Display' };\n    });\n  }\n\n  saveRecipe(recipe) {\n    this.setState((prevState) => {\n      const recipes = [...prevState.recipes];\n      recipes.push(recipe);\n      localStorage.setItem('recipes', JSON.stringify(recipes));\n      return { recipes };\n    });\n  }\n\n  renderModal() {\n    const {\n      mode,\n      selectedRecipe,\n    } = this.state;\n\n    if (mode === 'Display') {\n      return (\n        <Modal\n          onClose={this.handleCloseModalClick}\n          title={selectedRecipe.name}\n        >\n          <RecipeDisplay\n            {...selectedRecipe}\n            onEdit={this.handleEditClick}\n            onDelete={this.handleDeleteClick}\n          />\n        </Modal>\n      );\n    }\n\n    if (mode === 'Add') {\n      return (\n        <Modal onClose={this.handleCloseModalClick} title=\"Add recipe\">\n          <RecipeForm onSave={this.saveRecipe} />\n        </Modal>\n      );\n    }\n\n    if (mode === 'Edit') {\n      return (\n        <Modal onClose={this.handleCloseModalClick} title=\"Edit recipe\">\n          <RecipeForm\n            {...selectedRecipe}\n            onSave={this.updateRecipe}\n          />\n        </Modal>\n      );\n    }\n\n    return <Modal />;\n  }\n\n  render() {\n    const { recipes, displayModal } = this.state;\n\n    return (\n      <div className=\"app\">\n        <Header onAdd={this.handleAddRecipeClick} />\n        <RecipeList\n          recipes={recipes}\n          onClick={this.handleRecipeCardClick}\n        />\n        {displayModal && this.renderModal()}\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","/* eslint-disable */\n\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { createElement } from 'react';\nimport { render } from 'react-dom';\n\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nimport 'normalize.css/normalize.css';\nimport 'font-awesome/css/font-awesome.min.css';\n\nconst AppElement = createElement(App);\nconst rootElement = document.getElementById('root');\n\nrender(AppElement, rootElement);\n\nserviceWorker.register();\n"],"sourceRoot":""}